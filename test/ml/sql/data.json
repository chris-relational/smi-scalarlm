[
    {
      "input": "The database schema is as follows:\nCREATE TABLE actor (actor_id numeric, first_name VARCHAR(45), last_name VARCHAR(45), last_update TIMESTAMP)\nCREATE TABLE country (country_id SMALLINT, country VARCHAR(50), last_update TIMESTAMP)\nCREATE TABLE city (city_id INT, city VARCHAR(50), country_id SMALLINT, last_update TIMESTAMP)\nCREATE TABLE address (address_id INT, address VARCHAR(50), address2 VARCHAR(50), district VARCHAR(20), city_id INT, postal_code VARCHAR(10), phone VARCHAR(20), last_update TIMESTAMP)\nCREATE TABLE language (language_id SMALLINT, name CHAR(20), last_update TIMESTAMP)\nCREATE TABLE category (category_id SMALLINT, name VARCHAR(25), last_update TIMESTAMP)\nCREATE TABLE customer (customer_id INT, store_id INT, first_name VARCHAR(45), last_name VARCHAR(45), email VARCHAR(50), address_id INT, active CHAR(1), create_date TIMESTAMP, last_update TIMESTAMP)\nCREATE TABLE film (film_id INT, title VARCHAR(255), description BLOB SUB_TYPE TEXT, release_year VARCHAR(4), language_id SMALLINT, original_language_id SMALLINT, rental_duration SMALLINT, rental_rate DECIMAL(4,2), length SMALLINT, replacement_cost DECIMAL(5,2), rating VARCHAR(10), special_features VARCHAR(100), last_update TIMESTAMP)\nCREATE TABLE film_actor (actor_id INT, film_id INT, last_update TIMESTAMP)\nCREATE TABLE film_category (film_id INT, category_id SMALLINT, last_update TIMESTAMP)\nCREATE TABLE film_text (film_id SMALLINT, title VARCHAR(255), description BLOB SUB_TYPE TEXT)\nCREATE TABLE inventory (inventory_id INT, film_id INT, store_id INT, last_update TIMESTAMP)\nCREATE TABLE staff (staff_id SMALLINT, first_name VARCHAR(45), last_name VARCHAR(45), address_id INT, picture BLOB, email VARCHAR(50), store_id INT, active SMALLINT, username VARCHAR(16), password VARCHAR(40), last_update TIMESTAMP)\nCREATE TABLE store (store_id INT, manager_staff_id SMALLINT, address_id INT, last_update TIMESTAMP)\nCREATE TABLE payment (payment_id INT, customer_id INT, staff_id SMALLINT, rental_id INT, amount DECIMAL(5,2), payment_date TIMESTAMP, last_update TIMESTAMP)\n\nGenerate SQL to answer the following question:\nCould you help me determine which actor starred most frequently in English-language children's category films that were rated either G or PG, had a running time of 120 minutes or less, and were released between 2000 and 2010? Please provide the actor's full name, formatted as FIRST_NAME ' ' LAST_NAME.\n",
      "output": "SELECT actor.first_name || ' ' || actor.last_name AS full_name FROM actor INNER JOIN film_actor ON actor.actor_id = film_actor.actor_id INNER JOIN film ON film_actor.film_id = film.film_id INNER JOIN film_category ON film.film_id = film_category.film_id INNER JOIN category ON film_category.category_id = category.category_id INNER JOIN language ON film.language_id = language.language_id WHERE category.name = 'Children' AND film.release_year BETWEEN 2000 AND 2010 AND film.rating IN ('G', 'PG') AND language.name = 'English' AND film.length <= 120 GROUP BY actor.actor_id, actor.first_name, actor.last_name ORDER BY COUNT(film.film_id) DESC LIMIT 1;"
    },
    {
      "input": "The database schema is as follows:\nCREATE TABLE actor (actor_id numeric, first_name VARCHAR(45), last_name VARCHAR(45), last_update TIMESTAMP)\nCREATE TABLE country (country_id SMALLINT, country VARCHAR(50), last_update TIMESTAMP)\nCREATE TABLE city (city_id INT, city VARCHAR(50), country_id SMALLINT, last_update TIMESTAMP)\nCREATE TABLE address (address_id INT, address VARCHAR(50), address2 VARCHAR(50), district VARCHAR(20), city_id INT, postal_code VARCHAR(10), phone VARCHAR(20), last_update TIMESTAMP)\nCREATE TABLE language (language_id SMALLINT, name CHAR(20), last_update TIMESTAMP)\nCREATE TABLE category (category_id SMALLINT, name VARCHAR(25), last_update TIMESTAMP)\nCREATE TABLE customer (customer_id INT, store_id INT, first_name VARCHAR(45), last_name VARCHAR(45), email VARCHAR(50), address_id INT, active CHAR(1), create_date TIMESTAMP, last_update TIMESTAMP)\nCREATE TABLE film (film_id INT, title VARCHAR(255), description BLOB SUB_TYPE TEXT, release_year VARCHAR(4), language_id SMALLINT, original_language_id SMALLINT, rental_duration SMALLINT, rental_rate DECIMAL(4,2), length SMALLINT, replacement_cost DECIMAL(5,2), rating VARCHAR(10), special_features VARCHAR(100), last_update TIMESTAMP)\nCREATE TABLE film_actor (actor_id INT, film_id INT, last_update TIMESTAMP)\nCREATE TABLE film_category (film_id INT, category_id SMALLINT, last_update TIMESTAMP)\nCREATE TABLE film_text (film_id SMALLINT, title VARCHAR(255), description BLOB SUB_TYPE TEXT)\nCREATE TABLE inventory (inventory_id INT, film_id INT, store_id INT, last_update TIMESTAMP)\nCREATE TABLE staff (staff_id SMALLINT, first_name VARCHAR(45), last_name VARCHAR(45), address_id INT, picture BLOB, email VARCHAR(50), store_id INT, active SMALLINT, username VARCHAR(16), password VARCHAR(40), last_update TIMESTAMP)\nCREATE TABLE store (store_id INT, manager_staff_id SMALLINT, address_id INT, last_update TIMESTAMP)\nCREATE TABLE payment (payment_id INT, customer_id INT, staff_id SMALLINT, rental_id INT, amount DECIMAL(5,2), payment_date TIMESTAMP, last_update TIMESTAMP)\n\nGenerate SQL to answer the following question:\nPlease help me find the film category with the highest total rental hours in cities where the city's name either starts with \"A\" or contains a hyphen.\n",
      "output": "SELECT category.name FROM category INNER JOIN film_category USING (category_id) INNER JOIN film USING (film_id) INNER JOIN inventory USING (film_id) INNER JOIN rental USING (inventory_id) INNER JOIN customer USING (customer_id) INNER JOIN address USING (address_id) INNER JOIN city USING (city_id) WHERE LOWER(city.city) LIKE 'a%' OR city.city LIKE '%-%' GROUP BY category.name ORDER BY SUM(CAST((julianday(rental.return_date) - julianday(rental.rental_date)) * 24 AS INTEGER)) DESC LIMIT 1;"
    }
  ]
  