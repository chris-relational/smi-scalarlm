{"question": "How many heads of the departments are older than 56 ?", "context": "CREATE TABLE head (age INTEGER)", "answer": "[SQL] SELECT COUNT(*) FROM head WHERE age > 56 [/SQL]"}
{"question": "List the name, born state and age of the heads of departments ordered by age.", "context": "CREATE TABLE head (name VARCHAR, born_state VARCHAR, age VARCHAR)", "answer": "[SQL] SELECT name, born_state, age FROM head ORDER BY age [/SQL]"}
{"question": "List the creation year, name and budget of each department.", "context": "CREATE TABLE department (creation VARCHAR, name VARCHAR, budget_in_billions VARCHAR)", "answer": "[SQL] SELECT creation, name, budget_in_billions FROM department [/SQL]"}
{"question": "What are the maximum and minimum budget of the departments?", "context": "CREATE TABLE department (budget_in_billions INTEGER)", "answer": "[SQL] SELECT MAX(budget_in_billions), MIN(budget_in_billions) FROM department [/SQL]"}
{"question": "What is the average number of employees of the departments whose rank is between 10 and 15?", "context": "CREATE TABLE department (num_employees INTEGER, ranking INTEGER)", "answer": "[SQL] SELECT AVG(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15 [/SQL]"}
{"question": "What are the names of the heads who are born outside the California state?", "context": "CREATE TABLE head (name VARCHAR, born_state VARCHAR)", "answer": "[SQL] SELECT name FROM head WHERE born_state <> 'California' [/SQL]"}
{"question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?", "context": "CREATE TABLE department (creation VARCHAR, department_id VARCHAR); CREATE TABLE management (department_id VARCHAR, head_id VARCHAR); CREATE TABLE head (head_id VARCHAR, born_state VARCHAR)", "answer": "[SQL] SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T3.born_state = 'Alabama' [/SQL]"}
{"question": "What are the names of the states where at least 3 heads were born?", "context": "CREATE TABLE head (born_state VARCHAR)", "answer": "[SQL] SELECT born_state FROM head GROUP BY born_state HAVING COUNT(*) >= 3 [/SQL]"}
{"question": "In which year were most departments established?", "context": "CREATE TABLE department (creation VARCHAR)", "answer": "[SQL] SELECT creation FROM department GROUP BY creation ORDER BY COUNT(*) DESC LIMIT 1 [/SQL]"}
{"question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?", "context": "CREATE TABLE management (department_id VARCHAR, temporary_acting VARCHAR); CREATE TABLE department (name VARCHAR, num_employees VARCHAR, department_id VARCHAR)", "answer": "[SQL] SELECT T1.name, T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes' [/SQL]"}
{"question": "How many acting statuses are there?", "context": "CREATE TABLE management (temporary_acting VARCHAR)", "answer": "[SQL] SELECT COUNT(DISTINCT temporary_acting) FROM management [/SQL]"}
{"question": "How many departments are led by heads who are not mentioned?", "context": "CREATE TABLE management (department_id VARCHAR); CREATE TABLE department (department_id VARCHAR)", "answer": "[SQL] SELECT COUNT(*) FROM department WHERE NOT department_id IN (SELECT department_id FROM management) [/SQL]"}
{"question": "What are the distinct ages of the heads who are acting?", "context": "CREATE TABLE head (age VARCHAR, head_id VARCHAR); CREATE TABLE management (head_id VARCHAR, temporary_acting VARCHAR)", "answer": "[SQL] SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id = T2.head_id WHERE T2.temporary_acting = 'Yes' [/SQL]"}
{"question": "List the states where both the secretary of 'Treasury' department and the secretary of 'Homeland Security' were born.", "context": "CREATE TABLE management (department_id VARCHAR, head_id VARCHAR); CREATE TABLE head (born_state VARCHAR, head_id VARCHAR); CREATE TABLE department (department_id VARCHAR, name VARCHAR)", "answer": "[SQL] SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Treasury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Homeland Security' [/SQL]"}
{"question": "Which department has more than 1 head at a time? List the id, name and the number of heads.", "context": "CREATE TABLE management (department_id VARCHAR); CREATE TABLE department (department_id VARCHAR, name VARCHAR)", "answer": "[SQL] SELECT T1.department_id, T1.name, COUNT(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id = T2.department_id GROUP BY T1.department_id HAVING COUNT(*) > 1 [/SQL]"}
{"question": "Which head's name has the substring 'Ha'? List the id and name.", "context": "CREATE TABLE head (head_id VARCHAR, name VARCHAR)", "answer": "[SQL] SELECT head_id, name FROM head WHERE name LIKE '%Ha%' [/SQL]"}
{"question": "How many farms are there?", "context": "CREATE TABLE farm (Id VARCHAR)", "answer": "[SQL] SELECT COUNT(*) FROM farm [/SQL]"}
{"question": "List the total number of horses on farms in ascending order.", "context": "CREATE TABLE farm (Total_Horses VARCHAR)", "answer": "[SQL] SELECT Total_Horses FROM farm ORDER BY Total_Horses [/SQL]"}
{"question": "What are the hosts of competitions whose theme is not \"Aliens\"?", "context": "CREATE TABLE farm_competition (Hosts VARCHAR, Theme VARCHAR)", "answer": "[SQL] SELECT Hosts FROM farm_competition WHERE Theme <> 'Aliens' [/SQL]"}
{"question": "What are the themes of farm competitions sorted by year in ascending order?", "context": "CREATE TABLE farm_competition (Theme VARCHAR, YEAR VARCHAR)", "answer": "[SQL] SELECT Theme FROM farm_competition ORDER BY YEAR [/SQL]"}
{"question": "What is the average number of working horses of farms with more than 5000 total number of horses?", "context": "CREATE TABLE farm (Working_Horses INTEGER, Total_Horses INTEGER)", "answer": "[SQL] SELECT AVG(Working_Horses) FROM farm WHERE Total_Horses > 5000 [/SQL]"}
{"question": "What are the maximum and minimum number of cows across all farms.", "context": "CREATE TABLE farm (Cows INTEGER)", "answer": "[SQL] SELECT MAX(Cows), MIN(Cows) FROM farm [/SQL]"}
{"question": "How many different statuses do cities have?", "context": "CREATE TABLE city (Status VARCHAR)", "answer": "[SQL] SELECT COUNT(DISTINCT Status) FROM city [/SQL]"}
{"question": "List official names of cities in descending order of population.", "context": "CREATE TABLE city (Official_Name VARCHAR, Population VARCHAR)", "answer": "[SQL] SELECT Official_Name FROM city ORDER BY Population DESC [/SQL]"}
{"question": "List the official name and status of the city with the largest population.", "context": "CREATE TABLE city (Official_Name VARCHAR, Status VARCHAR, Population VARCHAR)", "answer": "[SQL] SELECT Official_Name, Status FROM city ORDER BY Population DESC LIMIT 1 [/SQL]"}
{"question": "Show the years and the official names of the host cities of competitions.", "context": "CREATE TABLE city (Official_Name VARCHAR, City_ID VARCHAR); CREATE TABLE farm_competition (Year VARCHAR, Host_city_ID VARCHAR)", "answer": "[SQL] SELECT T2.Year, T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID [/SQL]"}
{"question": "Show the official names of the cities that have hosted more than one competition.", "context": "CREATE TABLE farm_competition (Host_city_ID VARCHAR); CREATE TABLE city (Official_Name VARCHAR, City_ID VARCHAR)", "answer": "[SQL] SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*) > 1 [/SQL]"}
{"question": "Show the status of the city that has hosted the greatest number of competitions.", "context": "CREATE TABLE city (Status VARCHAR, City_ID VARCHAR); CREATE TABLE farm_competition (Host_city_ID VARCHAR)", "answer": "[SQL] SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1 [/SQL]"}
{"question": "Please show the themes of competitions with host cities having populations larger than 1000.", "context": "CREATE TABLE city (City_ID VARCHAR, Population INTEGER); CREATE TABLE farm_competition (Theme VARCHAR, Host_city_ID VARCHAR)", "answer": "[SQL] SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID WHERE T1.Population > 1000 [/SQL]"}
{"question": "Please show the different statuses of cities and the average population of cities with each status.", "context": "CREATE TABLE city (Status VARCHAR, Population INTEGER)", "answer": "[SQL] SELECT Status, AVG(Population) FROM city GROUP BY Status [/SQL]"}
{"question": "Please show the different statuses, ordered by the number of cities that have each.", "context": "CREATE TABLE city (Status VARCHAR)", "answer": "[SQL] SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) [/SQL]"}
{"question": "List the most common type of Status across cities.", "context": "CREATE TABLE city (Status VARCHAR)", "answer": "[SQL] SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1 [/SQL]"}
{"question": "List the official names of cities that have not held any competition.", "context": "CREATE TABLE farm_competition (Official_Name VARCHAR, City_ID VARCHAR, Host_city_ID VARCHAR); CREATE TABLE city (Official_Name VARCHAR, City_ID VARCHAR, Host_city_ID VARCHAR)", "answer": "[SQL] SELECT Official_Name FROM city WHERE NOT City_ID IN (SELECT Host_city_ID FROM farm_competition) [/SQL]"}
{"question": "Show the status shared by cities with population bigger than 1500 and smaller than 500.", "context": "CREATE TABLE city (Status VARCHAR, Population INTEGER)", "answer": "[SQL] SELECT Status FROM city WHERE Population > 1500 INTERSECT SELECT Status FROM city WHERE Population < 500 [/SQL]"}
{"question": "Find the official names of cities with population bigger than 1500 or smaller than 500.", "context": "CREATE TABLE city (Official_Name VARCHAR, Population VARCHAR)", "answer": "[SQL] SELECT Official_Name FROM city WHERE Population > 1500 OR Population < 500 [/SQL]"}
{"question": "Show the census ranking of cities whose status are not \"Village\".", "context": "CREATE TABLE city (Census_Ranking VARCHAR, Status VARCHAR)", "answer": "[SQL] SELECT Census_Ranking FROM city WHERE Status <> \"Village\" [/SQL]"}
{"question": "which course has most number of registered students?", "context": "CREATE TABLE courses (course_name VARCHAR, course_id VARCHAR); CREATE TABLE student_course_registrations (course_Id VARCHAR)", "answer": "[SQL] SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY COUNT(*) DESC LIMIT 1 [/SQL]"}
{"question": "what is id of students who registered some courses but the least number of courses in these students?", "context": "CREATE TABLE student_course_registrations (student_id VARCHAR)", "answer": "[SQL] SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY COUNT(*) LIMIT 1 [/SQL]"}
{"question": "what are the first name and last name of all candidates?", "context": "CREATE TABLE candidates (candidate_id VARCHAR); CREATE TABLE people (first_name VARCHAR, last_name VARCHAR, person_id VARCHAR)", "answer": "[SQL] SELECT T2.first_name, T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id [/SQL]"}
{"question": "List the id of students who never attends courses?", "context": "CREATE TABLE student_course_attendance (student_id VARCHAR); CREATE TABLE students (student_id VARCHAR)", "answer": "[SQL] SELECT student_id FROM students WHERE NOT student_id IN (SELECT student_id FROM student_course_attendance) [/SQL]"}
{"question": "List the id of students who attended some courses?", "context": "CREATE TABLE student_course_attendance (student_id VARCHAR)", "answer": "[SQL] SELECT student_id FROM student_course_attendance [/SQL]"}
{"question": "What are the ids of all students for courses and what are the names of those courses?", "context": "CREATE TABLE courses (course_name VARCHAR, course_id VARCHAR); CREATE TABLE student_course_registrations (student_id VARCHAR, course_id VARCHAR)", "answer": "[SQL] SELECT T1.student_id, T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id [/SQL]"}
{"question": "What is detail of the student who most recently registered course?", "context": "CREATE TABLE student_course_registrations (student_id VARCHAR, registration_date VARCHAR); CREATE TABLE students (student_details VARCHAR, student_id VARCHAR)", "answer": "[SQL] SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1 [/SQL]"}
{"question": "How many students attend course English?", "context": "CREATE TABLE student_course_attendance (course_id VARCHAR); CREATE TABLE courses (course_id VARCHAR, course_name VARCHAR)", "answer": "[SQL] SELECT COUNT(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"English\" [/SQL]"}
{"question": "How many courses do the student whose id is 171 attend?", "context": "CREATE TABLE courses (course_id VARCHAR); CREATE TABLE student_course_attendance (course_id VARCHAR, student_id VARCHAR)", "answer": "[SQL] SELECT COUNT(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171 [/SQL]"}
{"question": "Find id of the candidate whose email is stanley.monahan@example.org?", "context": "CREATE TABLE candidates (candidate_id VARCHAR); CREATE TABLE people (person_id VARCHAR, email_address VARCHAR)", "answer": "[SQL] SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = \"stanley.monahan@example.org\" [/SQL]"}
{"question": "Find id of the candidate who most recently accessed the course?", "context": "CREATE TABLE candidate_assessments (candidate_id VARCHAR, assessment_date VARCHAR)", "answer": "[SQL] SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1 [/SQL]"}
{"question": "What is detail of the student who registered the most number of courses?", "context": "CREATE TABLE students (student_details VARCHAR, student_id VARCHAR); CREATE TABLE student_course_registrations (student_id VARCHAR)", "answer": "[SQL] SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1 [/SQL]"}
{"question": "List the id of students who registered some courses and the number of their registered courses?", "context": "CREATE TABLE students (student_id VARCHAR); CREATE TABLE student_course_registrations (student_id VARCHAR)", "answer": "[SQL] SELECT T1.student_id, COUNT(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id [/SQL]"}
{"question": "How many registed students do each course have? List course name and the number of their registered students?", "context": "CREATE TABLE students (student_id VARCHAR); CREATE TABLE courses (course_name VARCHAR, course_id VARCHAR); CREATE TABLE student_course_registrations (course_id VARCHAR, student_id VARCHAR)", "answer": "[SQL] SELECT T3.course_name, COUNT(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id [/SQL]"}
{"question": "Find id of candidates whose assessment code is \"Pass\"?", "context": "CREATE TABLE candidate_assessments (candidate_id VARCHAR, asessment_outcome_code VARCHAR)", "answer": "[SQL] SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = \"Pass\" [/SQL]"}
{"question": "Find the cell mobile number of the candidates whose assessment code is \"Fail\"?", "context": "CREATE TABLE candidates (candidate_id VARCHAR); CREATE TABLE people (cell_mobile_number VARCHAR, person_id VARCHAR); CREATE TABLE candidate_assessments (candidate_id VARCHAR, asessment_outcome_code VARCHAR)", "answer": "[SQL] SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = \"Fail\" [/SQL]"}
{"question": "What are the id of students who registered course 301?", "context": "CREATE TABLE student_course_attendance (student_id VARCHAR, course_id VARCHAR)", "answer": "[SQL] SELECT student_id FROM student_course_attendance WHERE course_id = 301 [/SQL]"}
{"question": "What is the id of the student who most recently registered course 301?", "context": "CREATE TABLE student_course_attendance (student_id VARCHAR, course_id VARCHAR, date_of_attendance VARCHAR)", "answer": "[SQL] SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1 [/SQL]"}
{"question": "Find distinct cities of addresses of people?", "context": "CREATE TABLE addresses (city VARCHAR, address_id VARCHAR); CREATE TABLE people_addresses (address_id VARCHAR)", "answer": "[SQL] SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id [/SQL]"}
{"question": "Find distinct cities of address of students?", "context": "CREATE TABLE students (student_id VARCHAR); CREATE TABLE addresses (city VARCHAR, address_id VARCHAR); CREATE TABLE people_addresses (address_id VARCHAR, person_id VARCHAR)", "answer": "[SQL] SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id [/SQL]"}
{"question": "List the names of courses in alphabetical order?", "context": "CREATE TABLE courses (course_name VARCHAR)", "answer": "[SQL] SELECT course_name FROM courses ORDER BY course_name [/SQL]"}
{"question": "List the first names of people in alphabetical order?", "context": "CREATE TABLE people (first_name VARCHAR)", "answer": "[SQL] SELECT first_name FROM people ORDER BY first_name [/SQL]"}
{"question": "What are the id of students who registered courses or attended courses?", "context": "CREATE TABLE student_course_attendance (student_id VARCHAR); CREATE TABLE student_course_registrations (student_id VARCHAR)", "answer": "[SQL] SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance [/SQL]"}
{"question": "Find the id of courses which are registered or attended by student whose id is 121?", "context": "CREATE TABLE student_course_attendance (course_id VARCHAR, student_id VARCHAR); CREATE TABLE student_course_registrations (course_id VARCHAR, student_id VARCHAR)", "answer": "[SQL] SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121 [/SQL]"}
{"question": "What are all info of students who registered courses but not attended courses?", "context": "CREATE TABLE student_course_attendance (student_id VARCHAR); CREATE TABLE student_course_registrations (student_id VARCHAR)", "answer": "[SQL] SELECT * FROM student_course_registrations WHERE NOT student_id IN (SELECT student_id FROM student_course_attendance) [/SQL]"}
{"question": "List the id of students who registered course statistics in the order of registration date.", "context": "CREATE TABLE student_course_registrations (student_id VARCHAR, course_id VARCHAR, registration_date VARCHAR); CREATE TABLE courses (course_id VARCHAR, course_name VARCHAR)", "answer": "[SQL] SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.registration_date [/SQL]"}
{"question": "List the id of students who attended  statistics courses in the order of attendance date.", "context": "CREATE TABLE student_course_attendance (student_id VARCHAR, course_id VARCHAR, date_of_attendance VARCHAR); CREATE TABLE courses (course_id VARCHAR, course_name VARCHAR)", "answer": "[SQL] SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.date_of_attendance [/SQL]"}
{"question": "Give me the dates when the max temperature was higher than 85.", "context": "CREATE TABLE weather (date VARCHAR, max_temperature_f INTEGER)", "answer": "[SQL] SELECT date FROM weather WHERE max_temperature_f > 85 [/SQL]"}
